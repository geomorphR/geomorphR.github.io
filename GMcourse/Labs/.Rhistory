data = fishy)
anova(ME2)
ICCstats(ME2, subjects = "Subjects",
with_in = "Systematic ME", groups = "groups")
P <- plot(ME2)
focusMEonSubjects(P, subjects = 18:20, shadow = TRUE)
#heat map of inter-subject variability
int.var <- interSubVar(ME2, type = "var")
plot(int.var)
sessionInfo()
devtools::install_github('geomorphR/geomorph' ,ref = "Stable", build_vignettes = TRUE)
library(geomorph)
?gm.measurement.error
data(fishy)
fishy$coords
dim(fishy$coords)
library(geomorph)
ordinate
RRPP:::plot.ordinate
?ordinate
data("PlethMorph")
Y <- as.data.frame(PlethMorph[c("TailLength", "HeadLength",
"Snout.eye", "BodyWidth",
"Forelimb", "Hindlimb")])
Y <- as.matrix(Y)
R <- lm.rrpp(Y ~ SVL, data = PlethMorph,
iter = 0, print.progress = FALSE)$LM$residuals
PCA.ols <- ordinate(R, scale. = TRUE)
PCA.ols$rot
prcomp(R, scale. = TRUE)$rotation # should be the same
PCA.gls <- ordinate(R, scale. = TRUE,
transform. = FALSE,
Cov = PlethMorph$PhyCov)
PCA.t.gls <- ordinate(R, scale. = TRUE,
transform. = TRUE,
Cov = PlethMorph$PhyCov)
# Align to phylogenetic signal (in each case)
PaCA.ols <- ordinate(R, A = PlethMorph$PhyCov, scale. = TRUE)
PaCA.gls <- ordinate(R, A = PlethMorph$PhyCov,
scale. = TRUE,
transform. = FALSE,
Cov = PlethMorph$PhyCov)
PaCA.t.gls <- ordinate(R, A = PlethMorph$PhyCov,
scale. = TRUE,
transform. = TRUE,
Cov = PlethMorph$PhyCov)
par(mfrow = c(2,3))
plot(PCA.ols, main = "PCA OLS")
plot(PCA.gls, main = "PCA GLS")
plot(PCA.t.gls, main = "PCA t-GLS")
plot(PaCA.ols, main = "PaCA OLS")
plot(PaCA.gls, main = "PaCA GLS")
plot(PaCA.t.gls, main = "PaCA t-GLS")
par(mfrow = c(1,1))
P3 <- plot(PaCA.gls, main = "PaCA GLS", include.axes = TRUE,
col = 4, pch = 21, bg = PlethMorph$group,
flip = 1)
add.tree(P3, PlethMorph$tree, edge.col = 4)
RRPP:::add.tree
RRPP:::anc.BM
library(RRPP)
?add.tree
data("PlethMorph")
Y <- as.data.frame(PlethMorph[c("TailLength", "HeadLength",
"Snout.eye", "BodyWidth",
"Forelimb", "Hindlimb")])
Y <- as.matrix(Y)
R <- lm.rrpp(Y ~ SVL, data = PlethMorph,
iter = 0, print.progress = FALSE)$LM$residuals
PCA <- ordinate(R, scale. = TRUE)
pc.plot <- plot(PCA, pch = 19, col = "blue")
pc.plot$points
Y
PCA$x
pc.plot$points
#Track down issue in phylomorphospace
library(geomorph)
library(geiger)
library(phytools)
data(plethspecies)
Y.gpa <- gpagen(plethspecies$land)    #GPA-alignment
shape <- two.d.array(Y.gpa$coords)
PCA.w.phylo <- gm.prcomp(Y.gpa$coords, phy = plethspecies$phy)
summary(PCA.w.phylo)
plot(PCA.w.phylo, phylo = TRUE, main = "PCA.w.phylo")
PCA.w.phylo$anc.x
### anc. states of PCA data
PCdata <- prcomp(shape)
anc.ML(plethspecies$phy, PCdata$x[,1:2])
anc.ML(plethspecies$phy, PCdata$x[,1])
anc.ML(plethspecies$phy, PCdata$x[,2])
PCA.w.phylo$anc.x
?fastAnc
fastAnc(plethspecies$phy, PCdata$x[,1])
fastAnc(plethspecies$phy, PCdata$x[,2])
Anc.states <- cbind(fastAnc(plethspecies$phy, PCdata$x[,1]),
fastAnc(plethspecies$phy, PCdata$x[,2]))
Anc.states
phylomorphospace(plethspecies$phy, Anc.states)
phylomorphospace(plethspecies$phy, PCdata$[,1:2])
phylomorphospace(plethspecies$phy, PCdata$x[,1:2])
new.plot <- phylomorphospace(plethspecies$phy, PCdata$x[,1:2]) #similar to before
new.plot <- phylomorphospace(plethspecies$phy, PCdata$x[,1:2]) #similar to before
new.plot$xx
new.plot$yy
fastAnc(plethspecies$phy, PCdata$x[,1])
fastAnc(plethspecies$phy, PCdata$x[,2])
PCA.w.phylo$anc.x
fastAnc(plethspecies$phy, PCdata$x[,1])
fastAnc(plethspecies$phy, PCdata$x[,2])
devtools::install_github('mlcollyer/RRPP')
install.packages(c("cli", "digest", "nloptr", "prodlim", "spatstat.sparse", "TMB", "ucminf"))
devtools::install_github('mlcollyer/RRPP', ref = "master", force = TRUE)
devtools::install_github('geomorphR/geomorph', ref = "Stable", force = TRUE)
library(geomorph)
?gm.prcomp
data(plethspecies)
Y.gpa <- gpagen(plethspecies$land)    #GPA-alignment
###  Traditional PCA
PCA <- gm.prcomp(Y.gpa$coords)
summary(PCA)
plot(PCA, main = "PCA")
plot(PCA, main = "PCA", flip = 1) # flip the first axis
plot(PCA, main = "PCA", axis1 = 3, axis2 = 4) # change PCs viewed
### Phylomorphospace - PCA with phylogeny (result is same as above,
### but with estimated ancestral states projected into plot)
PCA.w.phylo <- gm.prcomp(Y.gpa$coords, phy = plethspecies$phy)
summary(PCA.w.phylo)
plot(PCA.w.phylo, phylo = TRUE, main = "PCA.w.phylo")
# partial correlation example
sz <- rnorm(100)
y1 <- .6*sz + rnorm(100,sd = .1)
plot(sz,y1)
y2 <- .3*sz + rnorm(100,sd = .1)
y2
plot(sz,y2)
R <- cor(sz,y1,y2)
R <- cor(cbind(sz,y1,y2))
R
Rinv <- solve(R)
Rinv
#partial correlation
pcor.y1y2 <- -Rinv[3,2]/ sqrt(Rinv[2,2] * Rinv[3,3])
pcor.y1y2
R
#some data where 2 traits are related with size
n=100
Pcor.chi <- n * ln(1-pcor.y1y2^2)
Pcor.chi <- n * log(1-pcor.y1y2^2)
Pcor.chi
pcor.y1y2^2
log(1 - pcor.y1y2^2)
Pcor.chi <- n * log(1 - pcor.y1y2^2)
pchisq()
pchisq(q = Pcor.chi, df = n-1)
pchisq(15,df = 1)
pchisq(15,df = 1, lower.tail = TRUE)
pchisq(15,df = 1, lower.tail = FALSE)
pchisq(q = Pcor.chi, df = n-1, lower.tail = FALSE)
##Regression approach
res.y1 <- resid(lm(y1~sz))
##Regression approach
res.y1 <- resid(lm(y1 ~ sz))
res.y2 <- resid(lm(y2 ~ sz))
cor(res.y1,res.y2)
pcor.y1y2
n=100
sz <- rnorm(n)
y1 <- .6*sz + rnorm(n,sd = .1)
y2 <- .4*sz + rnorm(n,sd = .1)
#correlation matrix
R <- cor(cbind(sz,y1,y2))
R  #note the correlation of y1 vs. y2 here (is artifactual via size)
#inverse of correlation matrix
Rinv <- solve(R)
#partial correlation
pcor.y1y2 <- -Rinv[3,2]/ sqrt(Rinv[2,2] * Rinv[3,3])
pcor.y1y2  #virtually no correlation of y1 vs y2 once size accounted for
#significance test (though should be obvious there is no correlation here)
Pcor.chi <- n * log(1 - pcor.y1y2^2)
pchisq(q = Pcor.chi, df = n-1, lower.tail = FALSE)
##Regression approach
res.y1 <- resid(lm(y1 ~ sz))
res.y2 <- resid(lm(y2 ~ sz))
cor(res.y1,res.y2)  #note that in this example, the result is the same (is not always the case, so the above approach is preferred)
plot(sz,y1)
plot(sz,y2)
scatterplot3d::scatterplot3d(x = sz, y = y1, z = y2)
n=100
sz <- rnorm(n)
y1 <- .6*sz + rnorm(n,sd = .1)
y2 <- .3*sz + rnorm(n,sd = .1)
plot(sz,y1)
plot(sz,y2)
scatterplot3d::scatterplot3d(x = sz, y = y1, z = y2) #hmm. y1 vs y2?
#correlation matrix
R <- cor(cbind(sz,y1,y2))
R  #note the correlation of y1 vs. y2 here (is artifactual via size)
#inverse of correlation matrix
Rinv <- solve(R)
#partial correlation
pcor.y1y2 <- -Rinv[3,2]/ sqrt(Rinv[2,2] * Rinv[3,3])
pcor.y1y2  #virtually no correlation of y1 vs y2 once size accounted for
#significance test (though should be obvious there is no correlation here)
Pcor.chi <- n * log(1 - pcor.y1y2^2)
pchisq(q = Pcor.chi, df = n-1, lower.tail = FALSE)
##Regression approach
res.y1 <- resid(lm(y1 ~ sz))
res.y2 <- resid(lm(y2 ~ sz))
cor(res.y1,res.y2)  #note that in this example, the result is the same (is not always the case, so the above approach is preferred)
A <- factor(1,1,1,1,2,2,2,2)
A <- gl(3,4)
A
B <- gl(2,6)
B
A:B
as.factor(paste(A,B))
as.factor(paste(A,B, sep = "."))
A:B
library(geomorph)
data(plethspecies)
Y.gpa <- gpagen(plethspecies$land)    #GPA-alignment
#Test for phylogenetic signal in shape
PSe.shape <- physignal.eigen(Y = Y.gpa$coords, phy = plethspecies$phy)
library(geomorph)
?physignal.eigen
data(plethspecies)
Y.gpa <- gpagen(plethspecies$land)
PSe.shape <- physignal.eigen(Y = Y.gpa$coords, phy = plethspecies$phy)
?vcv
plethspecies$phy -> tree
vcv(tree)
vcv
library(geomorph)
?physignal.ei
physignal.eigen
?physignal.eigen
data(plethspecies)
Y.gpa <- gpagen(plethspecies$land)
PSe.shape <- physignal.eigen(Y = Y.gpa$coords, phy = plethspecies$phy)
library(ape)
library(geomorph)
?physignal.ei
physignal.eigen
?physignal.eigen
data(plethspecies)
Y.gpa <- gpagen(plethspecies$land)    #GPA-alignment
#Test for phylogenetic signal in shape
PSe.shape <- physignal.eigen(Y = Y.gpa$coords, phy = plethspecies$phy)
library(geomorph)
data(plethspecies)
Y.gpa <- gpagen(plethspecies$land)
PSe.shape <- physignal.eigen(Y = Y.gpa$coords, phy = plethspecies$phy)
devtools::install_github('mlcollyer/RRPP', ref="develop")
library(geomorph)
?lm.rrpp
library(geomorph)
?physignal.eigen
data(plethspecies)
Y.gpa <- gpagen(plethspecies$land)
PSe.shape <- physignal.eigen(Y = Y.gpa$coords, phy = plethspecies$phy)
summary(PSe.shape)
plot(PSe.shape)
plot(PSe.shape, type = "vectors")
print(PSe.shape)
library(geomorph)
?physignal.eigen
data(plethspecies)
Y.gpa <- gpagen(plethspecies$land)    #GPA-alignment
#Test for phylogenetic signal in shape
PSe.shape <- physignal.eigen(Y = Y.gpa$coords, phy = plethspecies$phy)
summary(PSe.shape)
PSe.shape
print.PSe.shape
print(PSe.shape)
plot(PSe.shape)
summary(PSe.shape)
print(PSe.shape)
library(RRPP)
?pairwise
devtools::install_github('mlcollyer/RRPP')
library(RRPP)
?pairwise
tinytex::reinstall_tinytex()
978000+1,138,888
978000 + 1138888
librray(RRPP)
library(RRPP)
?lm.rrpp
data(Pupfish)
fit <- lm.rrpp(coords ~ Pop*Sex, data = Pupfish, iter = 0)
CV1 <- looCV(fit)
summary(CV1)
group <- interaction(Pupfish$Pop, Pupfish$Sex)
plot(CV1, flip = 1, pch = 19, col = group)
n <- NROW(Pupfish$coords)
p <- NCOL(Pupfish$coords)
set.seed(1001)
Yr <- matrix(rnorm(n * p), n, p) # random noise
fit2 <-lm.rrpp(Yr ~ Pop*Sex, data = Pupfish, iter = 0)
CV2 <- looCV(fit2)
summary(CV2)
group <- interaction(Pupfish$Pop, Pupfish$Sex)
plot(CV2, pch = 19, col = group)
looCV
RRPP:::looPCAll
RRPP:::looPCOne
library(tidymodels)
install.packages("tidymodels", dependencies = FALSE)
library(tidymodels)
library(tidymodels)
?tidymodels
x <- gl(2,5)
y <- rnorm(10)
anova(lm(y~1))
anva(lm(y~x))
anova(lm(y~x))
fit0 <- lm(y~1)
fit1 <- lm(y~x)
anova(fit0)$table
anova(fit0) -> tst
tst$`Mean Sq`
MS0 <- anova(fit0)`Mean Sq`
anova(fit1)`Mean Sq`
MS0 <- anova(fit0)$`Mean Sq`
MS1 <- anova(fit1)$`Mean Sq`
MS1
MS1 <- anova(fit1)$`Mean Sq`[2]
MS0/MS1
anova(fit1)
MS0-MS1
MS1-MS0 / MS1
MS1-MS0 / MS0
MS1-MS0
anova(fit0)$
MS0 <- anova(fit0)$`Sum Sq`
MS1 <- anova(fit1)$`Sum Sq`[2]
MS0-MS1
library(geomorph)
?trajectory.analysis
data(Pupfish)
fit <- lm.rrpp(coords ~ Pop * Sex, data = Pupfish, iter = 199)
reveal.model.designs(fit)
TA <- trajectory.analysis(fit, groups = Pupfish$Pop,
traj.pts = Pupfish$Sex, print.progress = FALSE)
TA$LS.means`
TA$LS.means
TA$LS.means
traj.specs.obs<-arrayspecs(TA$lsmeans.obs)
traj.specs.obs<-arrayspecs(TA$LS.means)
traj.specs.obs<-arrayspecs(TA$LS.means[[1]])
traj.specs.obs<-arrayspecs(TA$LS.means[1]
TA$LS.means[[1]]
traj.specs.obs<-arrayspecs(TA$LS.means[[1]], p = 54/2, k=2)
traj.specs.obs<-arrayspecs(as.matrix(TA$LS.means[[1]]), p = 54/2, k=2)
trac.specs.obs
traj.specs.obs
library(geomorph)
?combine.subsets
library(geomorph)
data(larvalMorph)
head.gpa <- gpagen(larvalMorph$headcoords,
curves = larvalMorph$head.sliders)
tail.gpa <- gpagen(larvalMorph$tailcoords,
curves = larvalMorph$tail.sliders)
all.lm <- combine.subsets(head = larvalMorph$headcoords,
tail = larvalMorph$tailcoords, gpa = FALSE, CS.sets = NULL)
plotAllSpecimens((all.lm$coords))
comb.lm <- combine.subsets(head = head.gpa, tail = tail.gpa, gpa = TRUE)
summary(comb.lm)
(configurations are actual relative size)
comb.lm$coords[,,1]
# Plot all specimens and just first specimen and color code landmarks
par(mfrow = c(1,2))
plotAllSpecimens(comb.lm$coords)
plot(comb.lm$coords[,,1], pch = 21, bg = c(rep(1,26),
rep(2,64)), asp = 1)
# Plot all specimens and just first specimen and color code landmarks
par(mfrow = c(1,2))
plotAllSpecimens(comb.lm$coords)
plot(comb.lm$coords[,,1], pch = 21, bg = c(rep(1,26),
rep(2,64)), asp = 1)
comb.lm <- combine.subsets(head = head.gpa$coords,
tail = tail.gpa$coords, gpa = FALSE, CS.sets = NULL)
par(mfrow = c(1,2))
plotAllSpecimens(comb.lm$coords)
plot(comb.lm$coords[,,1], pch = 21, bg = c(rep(1,26),
rep(2,64)), asp = 1)
comb.lm <- combine.subsets(head = head.gpa,
tail = tail.gpa, gpa = TRUE, norm.CS = TRUE)
summary(comb.lm)
par(mfrow = c(1,2))
plotAllSpecimens(comb.lm$coords)
plot(comb.lm$coords[,,1], pch = 21, bg = c(rep(1,26),
rep(2,64)), asp = 1)
comb.lm <- combine.subsets(head = head.gpa,
tail = tail.gpa, gpa = TRUE, norm.CS = FALSE, weights = c(0.3, 0.7))
summary(comb.lm)
par(mfrow = c(1,2))
plotAllSpecimens(comb.lm$coords)
plot(comb.lm$coords[,,1], pch = 21, bg = c(rep(1,26),
rep(2,64)), asp = 1)
par(mfrow = c(1,1))
data(larvalMorph)
head.gpa <- gpagen(larvalMorph$headcoords,
curves = larvalMorph$head.sliders)
tail.gpa <- gpagen(larvalMorph$tailcoords,
curves = larvalMorph$tail.sliders)
all.lm <- combine.subsets(head = larvalMorph$headcoords,
tail = larvalMorph$tailcoords, gpa = FALSE, CS.sets = NULL)
plotAllSpecimens((all.lm$coords))
comb.lm <- combine.subsets(head = head.gpa, tail = tail.gpa, gpa = TRUE)
summary(comb.lm)
comb.lm$coords[,,1]
# Plot all specimens and just first specimen and color code landmarks
par(mfrow = c(1,2))
plotAllSpecimens(comb.lm$coords)
plot(comb.lm$coords[,,1], pch = 21, bg = c(rep(1,26),
rep(2,64)), asp = 1)
plotAllSpecimens(larvalMorph)
data(larvalMorph)
head.gpa <- gpagen(larvalMorph$headcoords,
curves = larvalMorph$head.sliders)
tail.gpa <- gpagen(larvalMorph$tailcoords,
curves = larvalMorph$tail.sliders)
# Original Data
all.lm <- combine.subsets(head = larvalMorph$headcoords,
tail = larvalMorph$tailcoords, gpa = FALSE, CS.sets = NULL)
plotAllSpecimens((all.lm$coords))
par(mfrow = c(1,1))
comb.lm$coords[,,1]
data(larvalMorph)
head.gpa <- gpagen(larvalMorph$headcoords,
curves = larvalMorph$head.sliders)
tail.gpa <- gpagen(larvalMorph$tailcoords,
curves = larvalMorph$tail.sliders)
# Original Data
all.lm <- combine.subsets(head = larvalMorph$headcoords,
tail = larvalMorph$tailcoords, gpa = FALSE, CS.sets = NULL)
plotAllSpecimens((all.lm$coords))
# Combine with GPA and relative centroid size
comb.lm <- combine.subsets(head = head.gpa, tail = tail.gpa, gpa = TRUE)
par(mfrow = c(1,2))
plotAllSpecimens(comb.lm$coords)
plot(comb.lm$coords[,,1], pch = 21, bg = c(rep(1,26),
rep(2,64)), asp = 1)
par(mfrow = c(1,1))
all.lm <- combine.subsets(head = larvalMorph$headcoords,
tail = larvalMorph$tailcoords, gpa = FALSE, CS.sets = NULL)
abind
combine.subsets
dim(all.lm)
all.lm
all.lm$coords
dim(all.lm$coords)
tail.gpa$coords
larvalMorph$tailcoords
larvalMorph$headcoords
library(geomorph)
?globalIntegration
10900*.04
h = rep(1/3,3)
h
H <- rbind(h,h,h)
H
H%*%H
devtools::install_github('geomorphR/geomorph', ref = "stable")
devtools::install_github("geomorphR/geomorph", ref = "stable")
devtools::install_github("geomorphR/geomorph", ref = "Stable")
library(geomorph)
library(geomorph)
?shape.predictor
devtools::install_github()
devtools::install_github("geomorphR/geomorph", ref = "Stable")
devtools::install_github("geomorphR/geomorph", ref = "Stable")
library(geomorph)
?readland.fcsv
devtools::install_github("geomorphR/geomorph", ref = "Stable")
devtools::install_github("geomorphR/geomorph", ref = "Stable")
devtools::install_github("geomorphR/geomorph", ref = "Stable", force = "True")
devtools::install_github("geomorphR/geomorph", ref = "Stable", force = "TRUE")
devtools::install_github("geomorphR/geomorph", ref = "Stable", force = TRUE)
library(geomorph)
?readland.fcsv
.05/6
library(geomorph)
## Visualizing 3D shapes
scallops <- readland.tps("Data/scallops for viz.tps", specID = "ID")
setwd("C:/DeanData/Teaching/Workshops/GeomorphWorkshops/GMcourse/Labs")
## Visualizing 3D shapes
scallops <- readland.tps("Data/scallops for viz.tps", specID = "ID")
ref <- mshape(scallops)
refmesh <- warpRefMesh(read.ply("Data/glyp02L.ply"),
scallops[,,1], ref, color=NULL, centered=T)
PCA.scallop <- gm.prcomp(scallops)
plot(PCA.scallop, pch = 21, bg = "black", cex = 2)
PC.sc <- PCA.scallop$x[,1]
sc.preds <- shape.predictor(scallops, x= PC.sc, Intercept = FALSE,
pred1 = min(PC.sc), pred2 = max(PC.sc)) # PC 1 extremes
plotRefToTarget(ref, sc.preds$pred1, mesh = refmesh, method = "surface", mag = 1)
plotRefToTarget(ref, sc.preds$pred2, mesh = refmesh, method = "surface", mag = 1)
dimnames(Y.gpa)
# GPA
data(plethodon)
Y.gpa <- gpagen(plethodon$land, print.progress = F)
dimnames(Y.gpa$coords)
install.packages("Rvcg")
plotRefToTarget(ref, sc.preds$pred2, mesh = refmesh, method = "surface", mag = 1)
# Saving deformed PLY
PC.example <- plotRefToTarget(ref, sc.preds$pred2, mesh = refmesh, method = "surface", mag = 1)
library(Rvcg)
vcgPlyWrite(PC.example, filename= "PC.example.ply", writeCol = FALSE)
