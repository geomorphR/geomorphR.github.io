library(geomorph)
lizards <- readland.tps('LectureData/07.allometry/symm.shape2.tps', warnmsg = FALSE)
liz.lab <- read.csv('LectureData/07.allometry/ind.info.txt',header=TRUE, sep=",")
col.gp <- rep("black",nrow(liz.lab))
col.gp[which(liz.lab$type=='U')] <- 'red'
Y.gpa <- gpagen(lizards, print.progress = FALSE)
CS <- liz.lab$cs
type <- as.factor(liz.lab$type)
gdf <- geomorph.data.frame(Y.gpa, CS = CS, type = type)
plotAllSpecimens(Y.gpa$coords)
fit <- procD.lm(Y.gpa$coords~CS*type, data = gdf, print.progress = FALSE)
anova(fit)$table
PCA <- gm.prcomp(Y.gpa$coords)
plot(PCA,pch = 21, bg=col.gp,cex = 2)
legend("topleft", levels(gdf$type), pch = 21, pt.bg = unique(col.gp))
par(mfrow=c(1,2))
plot(fit, type = "regression", predictor = gdf$CS,
reg.type = "RegScore", pch=19, col = col.gp)
legend("topleft", levels(gdf$type), pch = 21, pt.bg = unique(col.gp))
mtext("Regression Scores")
plot(fit, type = "regression", predictor = gdf$CS,
reg.type = "PredLine", pch=19, col = col.gp)
legend("topleft", levels(gdf$type), pch = 21, pt.bg = unique(col.gp))
mtext("Predicted Lines")
par(mfrow=c(1,1))
# Shape predictor part. Is it correct?
preds <- shape.predictor(fit$GM$fitted, x= gdf$CS, Intercept = TRUE,
predmin.u = min(gdf$CS),
predmax.u = max(gdf$CS),
predmin.r = min(gdf$CS),
predmax.r = max(gdf$CS))
# Shape predictor part. Is it correct?
X <- fit$X
X <- X[,-1]
CS.min.max <- by(gdf$CS,gdf$type,range)
R.min <- c(CS.min.max$R[1], 0, 0)
R.max <- c(CS.min.max$R[2], 0, 0)
U.min <- c(CS.min.max$U[1], 0, CS.min.max$U[1])
U.max <- c(CS.min.max$U[2], 0, CS.min.max$U[2])
preds <- shape.predictor(fit$GM$fitted, x= X, Intercept = TRUE,
predmin.r = R.min,
predmax.r = R.max,
predmin.u = U.min,
predmax.u = U.max)
M <- mshape(Y.gpa$coords)
par(mfrow=c(2,2))
plotRefToTarget(M, preds$predmin.r, mag = 1)
mtext("Rural Min")
plotRefToTarget(M, preds$predmax.r, mag = 1)
mtext("Rural Max")
plotRefToTarget(M, preds$predmin.u, mag = 1)
mtext("Urban Min")
plotRefToTarget(M, preds$predmax.u, mag = 1)
mtext("Urban Max")
par(mfrow=c(1,1))
coords.subset
?coords.subset
?compare.CR
#### check: typical urban/rural
shape.gps <- coords.subset(fit$GM$fitted,type)
mn <- Map(function(x) mshape,shape.gps)
shape.gps <- coords.subset(fit$GM$fitted,type)
#### check: typical urban/rural
shape.gps <- coords.subset(fit$GM$fitted,type)
mn <- Map(function(x) mshape,shape.gps)
plotRefToTarget(M,mn$R
plotRefToTarget(M,mn$R)
mn$R
typ
type
plotAllSpecimens(shape.gps$R)
plotAllSpecimens(shape.gps$U)
mn <- Map(function(x) mshape(x),shape.gps)
plotRefToTarget(M,mn$R)
plotRefToTarget(M,mn$U)
coords.subset(gdf$CS,type)
CS.R <-
which(type=="R")
which(type=="R")
CS.R <- gdf$CS[which(type=="R")]
CS.U <-   gdf$CS[which(type=="U")]
predsR <- shape.predictor(shape.gps$R,x = CS.R, Intercept = TRUE,
predmin = min(CS.R),
predmax = max(CS.R))
plotRefToTarget(M,predsR$predmin)
plotRefToTarget(M,predsR$predmax)
predsU <- shape.predictor(shape.gps$U,x = CS.U, Intercept = TRUE,
predmin = min(CS.U),
predmax = max(CS.U))
plotRefToTarget(M,predsR$predmin, mag = 2)
plotRefToTarget(M,predsU$predmin, mag = 2)
plotRefToTarget(M,predsR$predmax, mag = 2)
plotRefToTarget(M,predsU$predmax, mag = 2)
library(geomorph)
data(pupfish)
plotAllSpecimens(pupfish$coords)
pupfish$logSize <- log(pupfish$CS)
pupfish$Group <- interaction(pupfish$Pop, pupfish$Sex)
fit.common <- procD.lm(coords ~ logSize + Group,
data = pupfish, print.progress = FALSE)
fit.unique <- procD.lm(coords ~ logSize * Group,
data = pupfish, print.progress = FALSE)
anova(fit.unique, fit.null = fit.common, print.progress = FALSE)
par(mfcol = c(1,2))
plot(fit.common, type = "regression", predictor = pupfish$logSize,
reg.type = "PredLine", pch=19, col = pupfish$Group)
legend("topleft", levels(pupfish$Group), pch = 21, pt.bg = unique(pupfish$Group))
mtext("Common Slopes")
plot(fit.unique, type = "regression", predictor = pupfish$logSize,
reg.type = "PredLine", pch=19, col = pupfish$Group)
legend("topleft", levels(pupfish$Group), pch = 21, pt.bg = unique(pupfish$Group))
mtext("Unique Slopes")
levels(pupfish$Group)
unique(pupfish$Group)
par(mfcol = c(1,2))
plot(fit.common, type = "regression", predictor = pupfish$logSize,
reg.type = "PredLine", pch=19, col = pupfish$Group)
legend("topleft", unique(pupfish$Group), pch = 21, pt.bg = unique(pupfish$Group))
par(mfcol = c(1,2))
plot(fit.common, type = "regression", predictor = pupfish$logSize,
reg.type = "PredLine", pch=19, col = pupfish$Group)
legend("topleft", legend = unique(pupfish$Group), pch = 21, pt.bg = unique(pupfish$Group))
mtext("Common Slopes")
plot(fit.unique, type = "regression", predictor = pupfish$logSize,
reg.type = "PredLine", pch=19, col = pupfish$Group)
legend("topleft", legend = unique(pupfish$Group), pch = 21, pt.bg = unique(pupfish$Group))
mtext("Unique Slopes")
library(geomorph)
spec <- readland.tps('lectureData/13.missing/fish.tps', specID = "imageID", warnmsg = FALSE)
spec <- geomorph:::center.scale(spec[,,1])$coords
links <- read.table("lectureData/13.missing/links.txt")
#Simulate specimens with large allometry effect
CS <- seq(.5,1.5, by =.01)  #size
Dil <- seq(.5,1.5, by =.01)  #size
n <- length(CS); p<-40; k<-2
specs <- array(NA,dim=c(p,k,n))
for (i in 1:n){
trans <- matrix(c(Dil[i],0,0,1),nrow=2)
specs[,,i] <- CS[i]*(spec%*%trans)+.3*CS[i]*matrix(rnorm(n=p*k, sd = 0.01),ncol=2)
}
Y.gpa <- gpagen(specs, print.progress = FALSE)
fishshapes <- Y.gpa$coords
ref <- mshape(fishshapes)
PCA <- gm.prcomp(fishshapes)
PC <- PCA$x[,1]
preds <- shape.predictor(fishshapes, x= PC, Intercept = FALSE,
pred1 = min(PC), pred2 = max(PC))
plot(PCA, pch=21, cex=1,bg="black")
fish.colmin <- rep("black",dim(fishshapes)[[3]]); fish.colmin[1] ="red"
fish.szmin <- rep(1.0,dim(fishshapes)[[3]]); fish.szmin[1] =2
plot(PCA,pch=21, bg=fish.colmin, cex=fish.szmin)
shapes.missing<-fishshapes  #delete 1, 7, 15, 26
shapes.missing[c(1,7,17,26),,1]<-NA
shapes.missing[c(1,7,17,26),,101]<-NA
new.tps<-estimate.missing(shapes.missing,method="TPS")
new.reg<-estimate.missing(shapes.missing,method="Reg")
library(knitr)
library(geomorph)
opts_chunk$set(echo = TRUE)
library(xaringanthemer)
style_mono_light()
new.reg<-gpagen(new.reg, print.progress=FALSE)$coords
par(mfrow=c(2,2))
plotRefToTarget(ref,ref,links=links)
mtext("Reference")
plotRefToTarget(ref,fishshapes[,,1],links=links)
mtext("TPS: Reference --> Original")
plotRefToTarget(ref,new.reg[,,1],links=links)
mtext("TPS: Ref --> Estimated Specimen")
plotRefToTarget(fishshapes[,,1],new.reg[,,1],links=links)
mtext("TPS: Original --> Estimated Specimen")
as.matrix(dist(rbind(t(matrix(ref)),t(matrix(fishshapes[,,1])),t(matrix(new.tps[,,1])))))
par(mfrow=c(2,2))
plotRefToTarget(ref,ref,links=links)
mtext("Reference")
plotRefToTarget(ref,fishshapes[,,101],links=links)
mtext("TPS: Reference --> Original")
plotRefToTarget(ref,new.reg[,,101],links=links)
mtext("TPS: Ref --> Estimated Specimen")
plotRefToTarget(fishshapes[,,101],new.reg[,,101],links=links)
mtext("TPS: Original --> Estimated Specimen")
as.matrix(dist(rbind(t(matrix(ref)),t(matrix(fishshapes[,,101])),t(matrix(new.tps[,,101])))))
library(geomorph)
data(plethodon)
Y.gpa <- gpagen(plethodon$land, print.progress = FALSE)
plotAllSpecimens(Y.gpa$coords, links = plethodon$links)
plethodon$links
plotAllSpecimens(Y.gpa$coords, links = plethodon$links, label = TRUE)
library(knitr)
library(geomorph)
opts_chunk$set(echo = TRUE)
library(xaringanthemer)
style_mono_light()
plethodon$links <- rbind(plethodon$links, c(1,6))
plotAllSpecimens(Y.gpa$coords, links = plethodon$links, label = TRUE)
# Original Data
all.lm <- suppressMessages(combine.subsets(head = larvalMorph$headcoords,
tail = larvalMorph$tailcoords,
gpa = FALSE, CS.sets = NULL))
# Original Data
all.lm <- suppressWarnings(combine.subsets(head = larvalMorph$headcoords,
tail = larvalMorph$tailcoords,
gpa = FALSE, CS.sets = NULL))
combine.subsets
# Original Data
all.lm <-  invisible(capture.output(combine.subsets(head = larvalMorph$headcoords,
gpa = FALSE, CS.sets = NULL))
all.lm <-  invisible(capture.output(combine.subsets(head = larvalMorph$headcoords,
tail = larvalMorph$tailcoords,
gpa = FALSE, CS.sets = NULL)))
all.lm <-  invisible(capture.output(combine.subsets(head = larvalMorph$headcoords,
tail = larvalMorph$tailcoords,
gpa = FALSE, CS.sets = NULL)))
all.lm
all.lm <-  invisible(combine.subsets(head = larvalMorph$headcoords,
tail = larvalMorph$tailcoords,
gpa = FALSE, CS.sets = NULL))
invisible(capture.output(all.lm <- combine.subsets(head = larvalMorph$headcoords,
tail = larvalMorph$tailcoords,
gpa = FALSE, CS.sets = NULL)))
library(RRPP)
data(Pupfish)
Pupfish$logSize <- log(Pupfish$CS)
pupfish.pc<-prcomp(Pupfish$coords)$x
gps<-factor(paste(Pupfish$Sex,Pupfish$Pop))
fit.0<-lm.rrpp(Pupfish$logSize~1)
fit.S<-lm.rrpp(Pupfish$logSize~Pupfish$Sex)
fit.P<-lm.rrpp(Pupfish$logSize~Pupfish$Pop)
fit.SP<-lm.rrpp(Pupfish$logSize~Pupfish$Sex+Pupfish$Pop)
fit.Full<-lm.rrpp(Pupfish$logSize~Pupfish$Sex*Pupfish$Pop)
comp.Z <- model.comparison(fit.0, fit.S, fit.P, fit.SP, fit.Full, type = "Z")
summary(comp.Z)
anova(fit.S)
anova(fit.SP)
anova(fit.Full)
library(knitr)
library(RRPP)
library(geomorph)
library(phytools)
knitr::opts_chunk$set(echo = TRUE)
library(xaringanthemer)
style_mono_light()
snake<-read.csv("LectureData/14.prospectus/13-snake.csv",header=T)
f.0 <- lm.rrpp(hs ~ 1, data = rdf)
snake<-read.csv("LectureData/14.prospectus/13-snake.csv",header=T)
site<-as.factor(snake[,1])
region<-as.factor(snake[,2])
sex<-as.factor(snake[,3])
svl<-snake[,4]
hs<-snake[,5] # hs= head size, calculated as centroid size from lm
rdf <- data.frame(svl = svl, hs = hs, sex = sex, site = site, region = region)
f.0 <- lm.rrpp(hs ~ 1, data = rdf)
f.svl <- lm.rrpp(hs ~ svl, data = rdf)
f.sex <- lm.rrpp(hs ~ sex, data = rdf)
f.reg <- lm.rrpp(hs ~ region, data = rdf)
f.svl.reg <- lm.rrpp(hs ~ svl + region, data = rdf, SS.type = "II")
f.svl.by.reg <- lm.rrpp(hs ~ svl * region, data = rdf, SS.type = "II")
model.comparison(f.0, f.svl, f.sex, f.reg, f.svl.reg, f.svl.by.reg, type = "logLik")
anova(f.svl.by.reg)
model.comparison(f.0, f.svl, f.sex, f.reg, f.svl.reg, f.svl.by.reg, type = "Z")
summary(model.comparison(f.0, f.svl, f.sex, f.reg, f.svl.reg, f.svl.by.reg, type = "Z"))
